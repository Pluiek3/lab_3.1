/**
 * @file time_utils.h
 * @brief Заголовочный файл утилит для работы со временем
 *
 * Предоставляет структуры и функции для представления времени и преобразования
 * между различными форматами. Все функции потокобезопасны и реентерабельны.
 */

#ifndef TIME_UTILS_H
#define TIME_UTILS_H

/**
 * @brief Структура для представления времени (часы и минуты)
 *
 * Хранит время в 24-часовом формате.
 * Например, 14:30 представляет 2:30 PM.
 */
typedef struct {
    int hours;   ///< Часы (0-23)
    int minutes; ///< Минуты (0-59)
} Time;

/**
 * @brief Разбирает строку времени в структуру Time
 *
 * @param time_str Строка в формате "HH:MM" (24-часовой формат)
 * @return Структура Time с разобранными часами и минутами
 *
 * @note Входная строка должна строго соответствовать формату "HH:MM"
 * @warning Не выполняет валидацию ввода - некорректный ввод приводит к неопределённому поведению
 * @example
 * Time t = parse_time("14:30"); // t будет содержать {14, 30}
 */
Time parse_time(const char *time_str);

/**
 * @brief Преобразует структуру Time в общее количество минут
 *
 * @param t Структура Time для преобразования
 * @return Общее количество минут с полуночи (0-1439)
 *
 * @example
 * Time t = {2, 30};
 * int mins = time_to_minutes(t); // вернёт 150
 */
int time_to_minutes(Time t);

/**
 * @brief Преобразует минуты в структуру Time
 *
 * @param total_minutes Количество минут с полуночи (любое целое число)
 * @return Нормализованная структура Time
 *
 * @note Обрабатывает переполнение (1440 минут преобразуется в 0:00)
 * @example
 * Time t = minutes_to_time(1470); // вернёт {0, 30} (24*60 + 30)
 */
Time minutes_to_time(int total_minutes);

#endif /* TIME_UTILS_H */